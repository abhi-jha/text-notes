1. Go all out: create your own project, your milestones, your resources, dependencies, requirements, and test plan. It will force you not only to improve your programming skills to operate within specific parameters, but will also serve to highlight exactly where you most need to improve. Make regular updates about your progress, whether through a blog or more formal project updates, so that you can see exactly where you've been and where you hope to go.

2. https://softwareengineering.stackexchange.com/questions/44177/what-is-the-single-most-effective-thing-you-did-to-improve-your-programming-skil

Two things:

Read code written by different people.
Write documentation for code written by other people.
Writing code is extremely easy; every other person I know can do that. But reading someone else's code and figuring out what it does was a whole new world to me.


In no specific order...

Working with people far smarter than myself

Always listening to what others have to say, regardless if they're junior, intermediate, senior or guru. job title doesn't mean anything.

Learning other frameworks/languages, and seeing how they do things, and compare that to stuff that I already know

Reading about patterns, best practices, and then examining my old stuff and applying those patterns where necessary

Pair programming

Disagreeing with everything Joel says. ;)

https://softwareengineering.stackexchange.com/questions/43528/im-graduating-with-a-computer-science-degree-but-i-dont-feel-like-i-know-how-t/43529#43529

https://softwareengineering.stackexchange.com/questions/48698/i-dont-program-in-my-spare-time-does-that-make-me-a-bad-developer

https://softwareengineering.stackexchange.com/questions/756/where-can-i-find-programming-puzzles-and-challenges/764#764

http://forum.lessthandot.com/viewforum.php?f=102

https://softwareengineering.stackexchange.com/questions/165543/how-to-write-a-very-basic-compiler/165558#165558

https://softwareengineering.stackexchange.com/questions/78547/how-do-you-tell-if-advice-from-a-senior-developer-is-bad

https://softwareengineering.stackexchange.com/questions/263589/how-to-break-up-a-programming-project-into-tasks-for-other-developers/263596#263596

https://www.quora.com/Is-practicing-500-programming-questions-on-LeetCode-HackerEarth-etc-enough-to-prepare-for-a-Google-interview

https://www.linkedin.com/pulse/how-prepare-technical-interview-google-amazon-linkedin-chris-laffra/

